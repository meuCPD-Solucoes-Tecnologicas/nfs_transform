#python que calcula os faltantes da sequencia :
def calcula_faltantes(lista):
    lista = sorted(lista)
    lista_faltantes = []
    for i in range(len(lista)-1):
        if lista[i+1] - lista[i] > 1:
            lista_faltantes.extend(range(lista[i]+1, lista[i+1]))
    return lista_faltantes
nnfs_das_notas_com_recibo = [45300,
45301,
45303,
45304,
45305,
45306,
45307,
45308,
45309,
45310,
45311,
45312,
45313,
45315,
45316,
45317,
45318,
45319,
45320,
45321,
45323,
45324,
45326,
45328,
45330,
45331,
45332,
45333,
45334,
45335,
45336,
45337,
45338,
45339,
45342,
45343,
45344,
45345,
45346,
45347,
45348,
45349,
45350,
45352,
45353,
45356,
45359,
45360,
45364,
45365,
45368,
45370,
45380,
45398,
45409,
45415,
45423,
45425,
45456,
45462,
45477,
45483,
45498,
45507,
45514,
45515,
45520,
45521,
45531,
45533,
45538,
45569,
45570,
45571,
45573,
45574,
45575,
45576,
45577,
45578,
45579,
45580,
45581,
45584,
45587,
45588,
45589,
45590,
45591,
45592,
45593,
45594,
45595,
45596,
45597,
45598,
45599,
45600,
45601,
45602,
45603,
45604,
45605,
45607,
45609,
45610,
45612,
45613,
45614,
45615,
45617,
45618,
45620,
45621,
45622,
45624,
45625,
45630,
45631,
45632,
45633,
45637,
45644,
45646,
45648,
45649,
45656,
45662,
45681,
45686,
45689,
45690,
45691,
45692,
45693,
45694,
45695,
45696,
45697,
45698,
45699,
45700,
45701,
45702,
45703,
45704,
45705,
45706,
45709,
45710,
45713,
45716,
45718,
45721,
45722,
45723,
45726,
45731,
45733,
45734,
45735,
45737,
45738,
45739,
45740,
45741,
45742,
45743,
45747,
45748,
45749,
45750,
45751,
45752,
45755,
45756,
45758,
45763,
45766,
45767,
45771,
45772,
45773,
45774,
45775,
45776,
45777,
45778,
45779,
45780,
45781,
45782,
45783,
45784,
45785,
45786,
45787,
45788,
45790,
45791,
45792,
45793,
45794,
45796,
45797,
45798,
45799,
45800,
45803,
45804,
45805,
45806,
45810,
45811,
45812,
45813,
45814,
45815,
45816,
45817,
45818,
45819,
45820,
45821,
45822,
45823,
45825,
45827,
45828,
45829,
45830,
45831,
45832,
45833,
45838,
45839,
45840,
45841,
45842,
45843,
45844,
45845,
45846,
45847,
45848,
45849,
45850,
45851,
45852,
45853,
45855,
45856,
45857,
45858,
45859,
45862,
45864,
45865,
45866,
45867,
45868,
45869,
45870,
45872,
45874,
45876,
45877,
45880,
45883,
45884,
45885,
45886,
45888,
45890,
45891,
45892,
45893,
45896,
45898,
45899,
45900,
45901,
45903,
45905,
45906,
45907,
45908,
45912,
45913,
45917,
45918,
45919,
45921,
45925,
45926,
45927,
45928,
45930,
45933,
45936,
45937,
45939,
45942,
45943,
45944,
45952,
45956,
45957,
45958,
45959,
45961,
45964,
45966,
45969,
45970,
45971,
45974,
45977,
45984,
45986,
45987,
45988,
45989,
45990,
45991,
45992,
45993,
45994,
45995,
45996,
45997,
45998,
45999,
46000,
46001,
46002,
46003,
46004,
46005,
46006,
46007,
46008,
46009,
46010,
46011,
46012,
46013,
46014,
46015,
46016,
46017,
46018,
46019,
46020,
46021,
46022,
46023,
46024,
46025,
46026,
46027,
46028,
46029,
46030,
46031,
46032,
46033,
46034,
46035,
46036,
46037,
46038,
46039,
46040,
46041,
46042,
46043,
46044,
46045,
46046,
46047,
46048,
46049,
46050,
46051,
46052,
46053,
46054,
46055,
46056,
46057,
46058,
46059,
46060,
46061,
46062,
46063,
46064,
46065,
46066,
46067,
46068,
46069,
46070,
46071]
__import__('ipdb').set_trace()

# with open('nNFs','a') as f2:
#     f2.write('\n'.join(map(str,calcula_faltantes(a))))

enviados_mas_sem_recibo = [45302,
45314,
45322,
45325,
45327,
45329,
45340,
45341,
45351,
45354,
45355,
45357,
45358,
45361,
45362,
45363,
45366,
45367,
45369,
45371,
45372,
45373,
45374,
45375,
45376,
45377,
45378,
45379,
45381,
45382,
45383,
45384,
45385,
45386,
45387,
45388,
45389,
45390,
45391,
45392,
45393,
45394,
45395,
45396,
45397,
45399,
45400,
45401,
45402,
45403,
45404,
45405,
45406,
45407,
45408,
45410,
45411,
45412,
45413,
45414,
45416,
45417,
45418,
45419,
45420,
45421,
45422,
45424,
45426,
45427,
45428,
45429,
45430,
45431,
45432,
45433,
45434,
45435,
45436,
45437,
45438,
45439,
45440,
45441,
45442,
45443,
45444,
45445,
45446,
45447,
45448,
45449,
45450,
45451,
45452,
45453,
45454,
45455,
45457,
45458,
45459,
45460,
45461,
45463,
45464,
45465,
45466,
45467,
45468,
45469,
45470,
45471,
45472,
45473,
45474,
45475,
45476,
45478,
45479,
45480,
45481,
45482,
45484,
45485,
45486,
45487,
45488,
45489,
45490,
45491,
45492,
45493,
45494,
45495,
45496,
45497,
45499,
45500,
45501,
45502,
45503,
45504,
45505,
45506,
45508,
45509,
45510,
45511,
45512,
45513,
45516,
45517,
45518,
45519,
45522,
45523,
45524,
45525,
45526,
45527,
45528,
45529,
45530,
45532,
45534,
45535,
45536,
45537,
45539,
45540,
45541,
45542,
45543,
45544,
45545,
45546,
45547,
45548,
45549,
45550,
45551,
45552,
45553,
45554,
45555,
45556,
45557,
45558,
45559,
45560,
45561,
45562,
45563,
45564,
45565,
45566,
45567,
45568,
45572,
45582,
45583,
45585,
45586,
45606,
45608,
45611,
45616,
45619,
45623,
45626,
45627,
45628,
45629,
45634,
45635,
45636,
45638,
45639,
45640,
45641,
45642,
45643,
45645,
45647,
45650,
45651,
45652,
45653,
45654,
45655,
45657,
45658,
45659,
45660,
45661,
45663,
45664,
45665,
45666,
45667,
45668,
45669,
45670,
45671,
45672,
45673,
45674,
45675,
45676,
45677,
45678,
45679,
45680,
45682,
45683,
45684,
45685,
45687,
45688,
45707,
45708,
45711,
45712,
45714,
45715,
45717,
45719,
45720,
45724,
45725,
45727,
45728,
45729,
45730,
45732,
45736,
45744,
45745,
45746,
45753,
45754,
45757,
45759,
45760,
45761,
45762,
45764,
45765,
45768,
45769,
45770,
45789,
45795,
45801,
45802,
45807,
45808,
45809,
45824,
45826,
45834,
45835,
45836,
45837,
45854,
45860,
45861,
45863,
45871,
45873,
45875,
45878,
45879,
45881,
45882,
45887,
45889,
45894,
45895,
45897,
45902,
45904,
45909,
45910,
45911,
45914,
45915,
45916,
45920,
45922,
45923,
45924,
45929,
45931,
45932,
45934,
45935,
45938,
45940,
45941,
45945,
45946,
45947,
45948,
45949,
45950,
45951,
45953,
45954,
45955,
45960,
45962,
45963,
45965,
45967,
45968,
45972,
45973,
45975,
45976,
45978,
45979,
45980,
45981,
45982,
45983,
45985]